@import "variable.less";
@import "main.less";

/**
 * 带边框的装饰角
 *
 * @width : 装饰角宽度
 *      @default    8px
 * @position : 装饰角位置
 *      left
 *      right
 *      top
 *      bottom
 *      @default    top
 * @border-color : 装饰角边框颜色
 *      @default    @gray
 * @background-color : 装饰角背景颜色
 *      @default    @white
 * @border-width : 装饰角边框宽度
 *      @default    1px
 **/
.arrow ( @width : 8px; @position : top; @border-color: @gray; @background-color: @white; @border-width : 1px ) {
    ._arrow( @width / 2; @border-color; @background-color; @position; @border-width );
}

/**
 * 无边框的装饰角
 *
 * @width : 装饰角宽度
 *      @default    8px
 * @position : 装饰角位置
 *      left
 *      right
 *      top
 *      bottom
 *      @default    top
 * @background-color : 装饰角背景颜色
 *      @default    @white
 **/
.arrow-full ( @width : 8px; @position : top; @background-color: @white ) {
    ._arrow( @width / 2; @white; @background-color; @position; 0px );
}

._arrow ( @w_half; @bd-color; @bg-color : @white; @position; @bd-width : 1px ) {
    .__pos ( @pos, @offset, @color ) when ( @pos = left ) {
        left: -@w_half * 2 + @offset;
        top: ~"calc( 50% - @{w_half} )";
        border-right-color: @color;
    }
    .__pos ( @pos, @offset, @color ) when ( @pos = right ) {
        right: -@w_half * 2 + @offset;
        top: ~"calc( 50% - @{w_half} )";
        border-left-color: @color;
    }
    .__pos ( @pos, @offset, @color ) when ( @pos = top ) {
        left: ~"calc( 50% - @{w_half} )";
        top: -@w_half * 2 + @offset;
        border-bottom-color: @color;
    }
    .__pos ( @pos, @offset, @color ) when ( @pos = bottom ) {
        left: ~"calc( 50% - @{w_half} )";
        bottom: -@w_half * 2 + @offset;
        border-top-color: @color;
    }
    &:before {
        .absolute;
        content: "";
        width: 0;
        height: 0;
        border: @w_half solid @trans;
        .__pos( @position, 0px, @bd-color );
    }

    &:after {
        .absolute;
        content: "";
        width: 0;
        height: 0;
        border: @w_half solid @trans;
        .__pos( @position, @bd-width * 2, @bg-color );
    }
}


/**
 * 装饰线
 *
 * @text-length : 内容文本字数
 * @width : 装饰线宽度
 *      @default : 1px
 * @color : 装饰线颜色
 *      @default : @gray
 **/
.line ( @text-length; @width : 1px; @color : @gray ) {
    ._line ( @text-length; @width; @color );
}

/**
 * 左装饰线
 *
 * @text-length : 内容文本字数
 * @width : 装饰线宽度
 *      @default : 1px
 * @color : 装饰线颜色
 *      @default : @gray
 **/
.line-left ( @text-length; @width : 1px; @color : @gray ) {
    ._line ( @text-length; @width; @color; true; false );
}

/**
 * 右装饰线
 *
 * @text-length : 内容文本字数
 * @width : 装饰线宽度
 *      @default : 1px
 * @color : 装饰线颜色
 *      @default : @gray
 **/
.line-right ( @text-length; @width : 1px; @color : @gray ) {
    ._line ( @text-length; @width; @color; false; true );
}

._line ( @len; @width; @color; @left : true; @right : true ) {
    .relative;

    @_len : @len / 2;
    @_w : @width / 2;

    & when ( @left = true ) {
        &:before {
            .mg-rt;
            .absolute;
            .left;
            content: "";
            height: @width;
            width: ~"calc( 50% - @{_len}em - @{pd} )";
            top: ~"calc( 50% - @{_w} )";
            background-color: @color;
        }
    }

    & when ( @right = true ) {
        &:after {
            .mg-lt;
            .absolute;
            .right;
            content: "";
            height: @width;
            width: ~"calc( 50% - @{_len}em - @{pd} )";
            top: ~"calc( 50% - @{_w} )";
            background-color: @color;
        }
    }
}

/**
 * Flex装饰线
 *
 * @width : 装饰线宽度
 *      @default : 1px
 * @color : 装饰线颜色
 *      @default : @gray
 **/
.flex-line ( @width : 1px; @color : @gray ) {
    ._flex-line ( @width; @color );
}

/**
 * Flex左装饰线
 *
 * @width : 装饰线宽度
 *      @default : 1px
 * @color : 装饰线颜色
 *      @default : @gray
 **/
.flex-line-left ( @width : 1px; @color : @gray ) {
    ._flex-line ( @width; @color; true; false );
}

/**
 * Flex右装饰线
 *
 * @width : 装饰线宽度
 *      @default : 1px
 * @color : 装饰线颜色
 *      @default : @gray
 **/
.flex-line-right ( @width : 1px; @color : @gray ) {
    ._flex-line ( @width; @color; false; true );
}

._flex-line ( @width; @color; @left : true; @right : true ) {
    .flex;
    .space-between;
    .align-center;
    .center;
    
    &:before {
        .mg-rt;
        content: "";
        height: @width;
        .trans-bg;
        & when ( @left = true ) {
            background-color: @color;
        }
        flex-basis : 0;
        flex-grow: 100;
    }

    &:after {
        .mg-lt;
        content: "";
        height: @width;
        .trans-bg;
        & when ( @right = true ) {
            background-color: @color;
        }
        flex-basis : 0;
        flex-grow: 100;
    }
}


/**
 * 灯光阴影
 *
 * @width: 阴影宽度
 *      @default : 100%
 * @height : 阴影高度
 *      @default : 5px
 * @top : 阴影距本体距离
 *      @default : 10px
 * @color : 阴影颜色
 *      @default : @hoary
 **/
.shadow ( @width : 100%; @height : 5px; @top : 10px; @color : @hoary ) {
    ._shadow( @width; @height; @top; @color );
}

._shadow ( @width; @height; @position; @color ) {
    .relative;
    &:after {
        .absolute;
        .circle;
        content: "";
        width: @width;
        height: @height;
        left: ~"calc( ( 100% - @{width} ) / 2 )";
        bottom: -@position;
        background-color: @color;
        box-shadow: 0 0 3px fade( @color, 30% );
    }
}

/**
 * 文字阴影（3D）
 *
 * @deeps : 阴影深度
 *      @default : 5px;
 * @deg : 阴影角度，可用任何表示角度或弧度的数值类型
 *      @default : 45deg;
 * @color-form : 阴影起始颜色，靠近文字
 *      @default : @hl;
 * @color-to : 阴影结束颜色，远离文字
 *      @default : @hl;
 **/
.text-shadow ( @deeps : 5px; @deg : 45deg; @color-form : @hl; @color-to : @hl; ) {
    ._text-shadow ( @deeps; @deg; @color-form; @color-to; );
}

._text-shadow ( @deeps; @deg; @form; @to; ) {
    @full-deeps : unit( @deeps );
    ._text-shadow ( @full-deeps; @deg; @form; @to; @full-deeps );
}

._text-shadow ( @deeps; @deg; @form; @to; @full-deeps ) when ( @deeps > 0 ) {
    @cur : @full-deeps - @deeps;
    @cur_per : percentage( @cur / @full-deeps );
    @cur_col : mix( @form, @to, @cur_per );
    @h : unit( sin( @deg ) * @deeps, px );
    @v : unit( cos( @deg ) * @deeps, px );
    text-shadow+ : @h @v 1px @cur_col;

    ._text-shadow( @deeps - 1; @deg; @form; @to; @full-deeps );
}


/**
 * 已选装饰
 *
 * @position: 装饰位置
 *      tr : top right
 *      tl : top left
 *      br : bottom right
 *      bl : bottom left
 *      @default : tr
 * @size: 装饰宽度
 *      @default : 30px
 * @bg-color: 装饰颜色
 *      @default : @hl
 * @color: 装饰文字颜色
 *      @default : @white
 * @content: 装饰内容（推荐使用单一文字或字符）
 *      @default : "\2714"
 **/
.choose-badge ( @position : tr; @size : 30px; @bg-color : @hl; @color : @white; @content : "\2714" ) {
    ._choose-badge( @position; @size; @bg-color; @color; @content );
}

._choose-badge ( @pos; @size; @bg-color; @color; @content ) {
    .relative;

    &:before {
        content: "";
        border : ( @size / 2 ) solid @trans;

        .absolute;
        & when ( @pos = tr ) {
            .top;
            .right;
            border-top-color: @bg-color;
            border-right-color: @bg-color;
        }
        & when ( @pos = tl ) {
            .top;
            .left;
            border-top-color: @bg-color;
            border-left-color: @bg-color;
        }
        & when ( @pos = br ) {
            .bottom;
            .right;
            border-bottom-color: @bg-color;
            border-right-color: @bg-color;
        }
        & when ( @pos = bl ) {
            .bottom;
            .left;
            border-bottom-color: @bg-color;
            border-left-color: @bg-color;
        }
    }
    &:after {
        .absolute;
        line-height: 1.0em;
        color: @color;
        font-size: @size / 2.5;
        & when ( @pos = tr ) {
            top : @size / 10;
            right : @size / 10;
        }
        & when ( @pos = tl ) {
            top : @size / 10;
            left: @size / 10;
        }
        & when ( @pos = br ) {
            bottom : @size / 10;
            right : @size / 10;
        }
        & when ( @pos = bl ) {
            bottom : @size / 10;
            left : @size / 10;
        }
        content: @content;
    }
}

/**
 * 滚动条
 *
 * @width: 滚动条宽度
 *      @default : 5px
 * @color: 滚动条滚动块颜色
 *      @default : @hl
 * @bg-color: 滚动条轨道区颜色
 *      @default : @white
 * @radius: 滚动条滚动块圆弧
 *      @default : 0
 **/
.scrollbar( @width : 5px; @color : @hl; @bg-color : @white; @radius : 0 ) {
    ._scrollbar( @width, @color, @bg-color, @radius );
}

._scrollbar ( @width, @color, @bg-color, @radius ) {
    &::-webkit-scrollbar {
        width: @width;
        height: @width;
    }
    &::-webkit-scrollbar-track {
        background-color : @bg-color;
    }
    &::-webkit-scrollbar-thumb {
        background-color: @color;
        border-radius: @radius;
    }
}