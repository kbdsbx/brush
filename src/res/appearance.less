@import (reference) 'main.less';

/**
 * 单选
 * radio.
 *
 * @size : 宽度
 *      @default : 14px
 * @color : 单选按钮颜色
 *      @default : @hl
 * @radius : 单选边框弧度
 *      @default : 50%
 * @content-size : 单选填充大小倍数
 *      @default : 1
 **/
.radio ( @size : 14px; @color : @hl; @radius : 50%; @content-size: 1 ) {
    ._radio( @size; @color; @radius; @content-size; );
}

/**
 * 多选
 * checkbox.
 *
 * @size : 宽度
 *      @default : 14px
 * @color : 多选按钮颜色
 *      @default : @hl
 * @radius : 多选边框弧度
 *      @default : 0%
 * @content-size : 多选填充大小倍数
 *      @default : 1
 * @content : 多选填充内容
 *      @default : "✔"
 **/
.checkbox ( @size : 14px; @color: @hl; @radius : 0%; @content-size: 1;  @content : "✔" ) {
    ._radio( @size, @color, @radius, @content-size, @content );
}

._radio ( @size, @color, @radius,  @content-size : 1, @content : 0 ) {
    font-size: @size;
    .relative;
    .inline;
    box-sizing: content-box;
    -webkit-box-sizing: content-box;
    width: 1em;
    height: 1em;
    margin: 0;
    padding: 0;
    border-radius: @radius;
    .bd;
    .gray-bd;
    .inline-flex;
    .cur-pointer;

    &:after {
        .absolute;
        .cur-pointer;
        .transparency;

        & when ( isnumber( @content ) ) {
            content: "";
            background-color: @color;
            border-radius: @radius;
            width: calc( .5em * @content-size );
            height: calc( .5em * @content-size );
            top: calc( .25em * ( 2.0 - @content-size ) );
            left: calc( .25em * ( 2.0 - @content-size ) );
        }

        & when ( isstring( @content ) ) {
            @content-per : @content-size * 100;
            @content-offset : ( @content-per - 100 ) / -2.0;
            content: @content;
            .hl;
            font-size: ~"@{content-per}%";
            left : ~"@{content-offset}%";
            top: ~"@{content-offset}%";
            color: @color;
            width: 1em;
            height: 1em;
            line-height: 1em;
            .text-center;
        }
    }

    &:checked:after {
        .opacity;
    }
}


.text ( @size: 14px; @color: @gray; @radius: 0 ) {
    ._text( @size, @color, @radius, 0 );
}

.textarea( @size: 14px; @color: @gray; @radius: 0 ) {
    ._text( @size, @color, @radius, 0 );
}

.select( @size: 14px; @color: @gray; @radius: 0 ) {
    ._text( @size, @color, @radius, "<polygon points='0,4 20,4 10,16' style='fill: @{color}' />" );
}

._text ( @size, @color, @radius, @badge ) {
    .ot-no;
    .bd;
    .gray-bd;
    .white-bg;
    font-size: @size;
    padding: .6em .8em;
    color: @color;
    border-radius: @radius;

    &::placeholder {
        color: lighten( @color, 20% );
    }

    & when ( isstring( @badge ) ) {
        padding-right: 2em;
        background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' height='20px' width='20px'>@{badge}</svg>") right .5em center no-repeat;
        background-size: 1em auto;
    }

    &[disabled] {
        background-color: @hoary;
    }
}


